<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Examen</title>
    <link rel="stylesheet" href="~/css/examen.css">
    <link rel="stylesheet" href="~/css/ModalWarning.css">
    <style>
        #guardarRespuestasBtn {
            display: none; /* Ocultar inicialmente */
        }
    </style>
</head>
<body>
    <header>
        <h1>EXAMEN</h1>
    </header>

    <div class="container">
        @{
            int? currentIdPregunta = null;
            var correctas = new Dictionary<int, int>();
            var respuestas = new Dictionary<int, int?>();
            var confianzas = new Dictionary<int, int?>();
        }

        @foreach (var examen in Model.Examen)
        {
            if (examen.IdPregunta != currentIdPregunta)
            {
                if (currentIdPregunta != null)
                {
                    @:<div>
                        <label style="text-align:center; font-weight: bold;">Nivel de confianza:</label>
                        @for (int i = 1; i <= 3; i++)
                        {
                            <label>
                                <input type="radio" name="confianza_@currentIdPregunta" value="@i" onclick="seleccionarConfianza(@currentIdPregunta, @i)" @(confianzas[currentIdPregunta.Value] == i ? "checked" : "") /> @(i == 1 ? "Baja" : i == 2 ? "Media" : "Alta")
                            </label>
                        }
                    @:</div>
                    @:</section>
                }

                currentIdPregunta = examen.IdPregunta;
                respuestas[currentIdPregunta.Value] = examen.OpcionResp;
                confianzas[currentIdPregunta.Value] = examen.Confianza;

                @:<section id="p@examen.IdPregunta">
                @:<h3>@examen.IdPregunta - @examen.DescPregunta</h3>
            }

            @:<label class="opcion" data-pregunta="@examen.IdPregunta">
            @:<input type='radio' value='@examen.IdOpcion' name='@examen.IdPregunta' data-correcta='@examen.EsCorrecta' onclick='respuesta(@examen.IdPregunta, this)' @(respuestas[examen.IdPregunta] == examen.IdOpcion ? "checked" : "") />@examen.DescRespuesta
            @:</label>

            if (examen.EsCorrecta)
            {
                correctas[examen.IdPregunta] = examen.IdOpcion;
            }
        }

        @if (currentIdPregunta != null)
        {
            @:<div>

                <label style="text-align:center; font-weight: bold;">Nivel de confianza:</label>
                @for (int i = 1; i <= 3; i++)
                {
                    <label>
                        <input type="radio" name="confianza_@currentIdPregunta" value="@i" onclick="seleccionarConfianza(@currentIdPregunta, @i)" @(confianzas[currentIdPregunta.Value] == i ? "checked" : "") /> @(i == 1 ? "Baja" : i == 2 ? "Media" : "Alta")
                    </label>
                }
            @:</div>
            @:</section>
        }

        @if (Model.Calificacion == null)
        {
            <button id="corregirBtn" onclick="mostrarModal()" style="margin: 10px 10%;">Calificar</button>
            <button id="guardarRespuestasBtn" onclick="guardarRespuestas()" style="margin: 10px 10%;">GUARDAR RESPUESTAS</button>
            <h2>Cantidad acertadas: <span id="resultado"></span></h2>
        }
        else
        {
            <button id="corregirBtn"  onclick ="window.location.href='@Url.Action("Temas", "CuestionarioAlumnos")'"style="margin: 10px 10%;">Regresar</button>
        }

        
    </div>

    <!-- Modal -->
    <div id="myModal" class="popup">
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Warning.svg/2219px-Warning.svg.png" alt="Warning">
        <h2>Confirmar</h2>
        <p>¿Estás seguro de que deseas confirmar las respuestas? No podrás modificar las respuestas después de esto.</p>
        <button onclick="confirmarCorregir()">Sí, confirmar</button>
        <button class="cancel-btn" onclick="cerrarModal()">Cancelar</button>
    </div>

    <script>
        let correctas = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(correctas));
        let opcion_elegida = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(respuestas));
        let niveles_confianza = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(confianzas));
        let cantidad_correctas = 0;
        let userCorreo = "@ViewBag.UserCorreo";

        function respuesta(num_pregunta, seleccionada) {
            opcion_elegida[num_pregunta] = parseInt(seleccionada.value);

            let id = "p" + num_pregunta;
            let labels = document.getElementById(id).getElementsByTagName('label');
            for (let i = 0; i < labels.length; i++) {
                labels[i].style.backgroundColor = "white";
            }

            seleccionada.parentNode.style.backgroundColor = "#cec0fc";
        }

        function seleccionarConfianza(num_pregunta, confianza) {
            niveles_confianza[num_pregunta] = confianza;
        }

        // Botón para abrir el modal
        function mostrarModal() {
            document.getElementById("myModal").classList.add("open-popup");
        }

        // Función para cerrar el modal
        function cerrarModal() {
            document.getElementById("myModal").classList.remove("open-popup");
        }

        function confirmarCorregir() {
            cerrarModal();
            corregir();
        }

        function corregir() {
            cantidad_correctas = 0;
            for (let pregunta in opcion_elegida) {
                if (opcion_elegida.hasOwnProperty(pregunta)) {
                    let seleccionada = opcion_elegida[pregunta];
                    if (correctas[pregunta] === seleccionada) {
                        cantidad_correctas++;
                    }
                }
            }

            document.getElementById("resultado").innerHTML = cantidad_correctas;
            document.getElementById("guardarRespuestasBtn").style.display = "inline-block"; // Mostrar el botón "GUARDAR RESPUESTAS"
            document.getElementById("corregirBtn").style.display = "none"; // Ocultar el botón "CORREGIR"
        }

        function guardarRespuestas() {
            let respuestas = [];
            for (let pregunta in opcion_elegida) {
                if (opcion_elegida.hasOwnProperty(pregunta)) {
                    let seleccionada = opcion_elegida[pregunta];
                    respuestas.push({
                        IdPrueba: @Model.IdTema,
                        IdPregunta: parseInt(pregunta),
                        IdOpcion: seleccionada,
                        EsCorrecta: correctas[pregunta] === seleccionada,
                        Confianza: niveles_confianza[pregunta] || 0
                    });
                }
            }

            fetch('/ExamenAlumno/GuardarRespuestas', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(respuestas)
            }).then(response => {
                if (response.ok) {
                    alert("Respuestas guardadas correctamente");
                    window.location.href = "@Url.Action("Temas", "CuestionarioAlumnos")";
                } else {
                    alert("Error al guardar respuestas");
                }
            });
        }

        // Cerrar el modal si el usuario hace clic fuera del modal
        window.onclick = function(event) {
            let modal = document.getElementById("myModal");
            if (event.target == modal) {
                modal.classList.remove("open-popup");
            }
        }
    </script>
</body>
</html>
